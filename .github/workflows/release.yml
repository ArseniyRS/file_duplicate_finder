name: Release App

on:
  push:
    branches:
      - main

jobs:
  release_build:
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build
      run: |
        pyinstaller -F -n FDF.exe -i ./assets/duplicate.ico main.py
    - uses: actions/upload-artifact@v2
      with:
        name: release
        path: dist/FDF.exe


    - name: Read version from .bumpversion.toml
      id: read_version
      run: |
        VERSION=$(sed -n 's/^current_version *= *"\(.*\)"/\1/p' .bumpversion.toml)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: |
          Changes in this Release:
        
        draft: true
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/FDF.exe
        asset_name: FDF.exe
        asset_content_type: application/octet-stream
    
